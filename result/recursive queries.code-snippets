{"Common Table Expression with Averages":{
    "scope": "sql",
    "prefix": "ssmsCommonTableExpressionwithAverages",
    "body": [
        "-- =================================================",
        "-- Common Table Expression With Averages template",
        "-- =================================================",
        "-- Using a common table expression to limit counts and report averages",
        "-- The following example shows the average number of employees reporting ",
        "-- to managers with Adventure Works database.",
        "",
        "USE ${1:AdventureWorks};",
        "GO",
        "",
        "WITH ${2:DirReps} (${3:Manager}, ${4:DirectReports}) AS ",
        "(",
        "    SELECT ${5:ManagerID}, COUNT(*) AS ${4:DirectReports}",
        "    FROM ${6:HumanResources}.${7:Employee}",
        "    GROUP BY ${5:ManagerID}",
        ") ",
        "SELECT AVG(${4:DirectReports}) AS [Average Number of Direct Reports]",
        "FROM ${2:DirReps} ",
        "WHERE ${4:DirectReports} >= 2 ;",
        "GO",
        "",
        ""
    ],
    "description": "Common Table Expression with Averages"
},"Direct Reports Recursion Example":{
    "scope": "sql",
    "prefix": "ssmsDirectReportsRecursionExample",
    "body": [
        "-- ===================================",
        "-- Direct Reports Recursion Example",
        "-- ===================================",
        "-- The following example shows the semantics of the recursive CTE structure by returning a ",
        "-- hierarchical list of employees, starting with the highest ranking employee, in the ",
        "-- Adventure Works Cycles company. The statement that executes the CTE limits the result ",
        "-- set to employees in the Research and Development Group. A walkthrough of the code execution ",
        "-- follows the example.",
        "",
        "USE ${1:AdventureWorks};",
        "GO",
        "",
        "WITH ${2:DirectReports} (${3:ManagerID}, ${4:EmployeeID}, Title, DeptID, ${5:Level})",
        "AS",
        "(",
        "-- Anchor member definition",
        "    SELECT e.${3:ManagerID}, e.${4:EmployeeID}, e.Title, edh.DepartmentID, ",
        "        0 AS ${5:Level}",
        "    FROM ${6:HumanResources}.${7:Employee} AS e",
        "    INNER JOIN ${6:HumanResources}.EmployeeDepartmentHistory AS edh",
        "        ON e.${4:EmployeeID} = edh.${4:EmployeeID} AND edh.EndDate IS NULL",
        "    WHERE ${3:ManagerID} IS NULL",
        "    UNION ALL",
        "-- Recursive member definition",
        "    SELECT e.${3:ManagerID}, e.${4:EmployeeID}, e.Title, edh.DepartmentID,",
        "        ${5:Level} + 1",
        "    FROM ${6:HumanResources}.${7:Employee} AS e",
        "    INNER JOIN ${6:HumanResources}.EmployeeDepartmentHistory AS edh",
        "        ON e.${4:EmployeeID} = edh.${4:EmployeeID} AND edh.EndDate IS NULL",
        "    INNER JOIN DirectReports AS d",
        "        ON e.${3:ManagerID} = d.${4:EmployeeID}",
        ")",
        "-- Statement that executes the common table expression",
        "SELECT ManagerID, ${4:EmployeeID}, Title, ${5:Level}",
        "FROM ${2:DirectReports}",
        "INNER JOIN ${6:HumanResources}.Department AS dp",
        "    ON ${2:DirectReports}.DeptID = dp.DepartmentID",
        "WHERE dp.GroupName = N'Research and Development' OR ${5:Level} = 0;",
        "GO",
        "",
        " "
    ],
    "description": "Direct Reports Recursion Example"
},"Product Assemblies Recursion Example":{
    "scope": "sql",
    "prefix": "ssmsProductAssembliesRecursionExample",
    "body": [
        "-- ================================================",
        "-- Product Assemblies Recursion Example template",
        "-- ================================================",
        "-- Uses a common table expression to selectively step through a recursive ",
        "-- relationship in a SELECT statement.",
        "-- The following example shows the hierarchy of product assemblies and ",
        "-- components that are required to build the bicycle for ProductAssemblyID = 800.",
        "",
        "USE ${1:AdventureWorks};",
        "GO",
        "",
        "WITH ${2:Parts}(${3:AssemblyID}, ${4:ComponentID}, PerAssemblyQty, EndDate, ${5:ComponentLevel}) AS",
        "(",
        "    SELECT b.ProductAssemblyID, b.ComponentID, b.PerAssemblyQty,",
        "        b.EndDate, 0 AS ${5:ComponentLevel}",
        "    FROM Production.BillOfMaterials AS b",
        "    WHERE b.ProductAssemblyID = 800",
        "          AND b.EndDate IS NULL",
        "    UNION ALL",
        "    SELECT bom.ProductAssemblyID, bom.ComponentID, p.PerAssemblyQty,",
        "        bom.EndDate, ${5:ComponentLevel} + 1",
        "    FROM Production.BillOfMaterials AS bom ",
        "        INNER JOIN ${2:Parts} AS p",
        "        ON bom.ProductAssemblyID = p.${4:ComponentID}",
        "        AND bom.EndDate IS NULL",
        ")",
        "SELECT ${3:AssemblyID}, ${4:ComponentID}, Name, PerAssemblyQty, EndDate,",
        "        ${5:ComponentLevel} ",
        "FROM ${2:Parts} AS p",
        "    INNER JOIN Production.Product AS pr",
        "    ON p.${4:ComponentID} = pr.ProductID",
        "ORDER BY ${5:ComponentLevel}, ${3:AssemblyID}, ${4:ComponentID};",
        "GO",
        ""
    ],
    "description": "Product Assemblies Recursion Example"
}}