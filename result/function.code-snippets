{"CLR Function":{
    "scope": "sql",
    "prefix": "ssmsCLRFunction",
    "body": "--=============================================================\r\n-- Create CLR Function template\r\n--\r\n-- This example creates an assembly named \"utf8string\" in the \r\n-- local database. Then, it creates a CLR function named \r\n-- \"GetCurrentTimeMs\" that references \"GetCurrentTimeMs\" \r\n-- of classutf8.Utils in assembly utf8string. \r\n--=============================================================\r\nUSE AdventureWorks\r\nGO\r\n\r\nCREATE ASSEMBLY utf8string\r\n  FROM '\\\\MachineName\\utf8string\\bin\\Debug\\utf8string.dll'\r\nGO\r\n\r\nCREATE FUNCTION GetCurrentTimeMs()\r\nRETURNS bigint\r\nAS EXTERNAL NAME utf8string.utf8string.GetCurrentTimeMs\r\nGO\r\n",
    "description": "CLR Function"
},"Create Inline Function (New Menu)":{
    "scope": "sql",
    "prefix": "ssmsCreateInlineFunction(NewMenu)",
    "body": [
        "-- ================================================",
        "-- Template generated from Template Explorer using:",
        "-- Create Inline Function (New Menu).SQL",
        "--",
        "-- Use the Specify Values for Template Parameters ",
        "-- command (Ctrl-Shift-M) to fill in the parameter ",
        "-- values below.",
        "--",
        "-- This block of comments will not be included in",
        "-- the definition of the function.",
        "-- ================================================",
        "SET ANSI_NULLS ON",
        "GO",
        "SET QUOTED_IDENTIFIER ON",
        "GO",
        "-- =============================================",
        "-- Author:\t\t${1:Name}",
        "-- Create date: ${2:}",
        "-- Description:\t${3:}",
        "-- =============================================",
        "CREATE FUNCTION ${4:FunctionName} ",
        "(\t",
        "\t-- Add the parameters for the function here",
        "\t${5:@p1} ${6:int}, ",
        "\t${7:@p2} ${8:char}",
        ")",
        "RETURNS TABLE ",
        "AS",
        "RETURN ",
        "(",
        "\t-- Add the SELECT statement with parameter references here",
        "\tSELECT 0",
        ")",
        "GO",
        ""
    ],
    "description": "Create Inline Function (New Menu)"
},"Create Inline Table-valued Function":{
    "scope": "sql",
    "prefix": "ssmsCreateInlineTable-valuedFunction",
    "body": [
        "--================================================",
        "--  Create Inline Table-valued Function template",
        "--================================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID (N'${2:dbo}.${3:EmployeeByID}') IS NOT NULL",
        "    DROP FUNCTION ${2:dbo}.${3:EmployeeByID}",
        "GO",
        "",
        "CREATE FUNCTION ${2:dbo}.${3:EmployeeByID}(${4:@employeeID} ${5:int})",
        "RETURNS TABLE",
        "AS RETURN",
        "(",
        "\t${6:SELECT * FROM HumanResources.Employee WHERE EmployeeID = @employeeID}",
        ")",
        "GO",
        ""
    ],
    "description": "Create Inline Table-valued Function"
},"Create Multi-statement Function (New Menu)":{
    "scope": "sql",
    "prefix": "ssmsCreateMulti-statementFunction(NewMenu)",
    "body": [
        "-- ================================================",
        "-- Template generated from Template Explorer using:",
        "-- Create Multi-Statement Function (New Menu).SQL",
        "--",
        "-- Use the Specify Values for Template Parameters ",
        "-- command (Ctrl-Shift-M) to fill in the parameter ",
        "-- values below.",
        "--",
        "-- This block of comments will not be included in",
        "-- the definition of the function.",
        "-- ================================================",
        "SET ANSI_NULLS ON",
        "GO",
        "SET QUOTED_IDENTIFIER ON",
        "GO",
        "-- =============================================",
        "-- Author:\t\t${1:Name}",
        "-- Create date: ${2:}",
        "-- Description:\t${3:}",
        "-- =============================================",
        "CREATE FUNCTION ${4:FunctionName} ",
        "(",
        "\t-- Add the parameters for the function here",
        "\t${5:@p1} ${6:int}, ",
        "\t${7:@p2} ${8:char}",
        ")",
        "RETURNS ",
        "${9:@Table_Var} TABLE ",
        "(",
        "\t-- Add the column definitions for the TABLE variable here",
        "\t${10:c1} ${11:int}, ",
        "\t${12:c2} ${13:int}",
        ")",
        "AS",
        "BEGIN",
        "\t-- Fill the table variable with the rows for your result set",
        "\t",
        "\tRETURN ",
        "END",
        "GO"
    ],
    "description": "Create Multi-statement Function (New Menu)"
},"Create Multi-statement Table-valued Function":{
    "scope": "sql",
    "prefix": "ssmsCreateMulti-statementTable-valuedFunction",
    "body": [
        "--================================================",
        "-- Create Multi-statement Table-valued Function",
        "--================================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID (N'${2:dbo}.${3:EmployeeByID}') IS NOT NULL",
        "   DROP FUNCTION ${2:dbo}.${3:EmployeeByID}",
        "GO",
        "",
        "CREATE FUNCTION ${2:dbo}.${4:fn_FindReports}(${5:@InEmpID} ${6:int})",
        "RETURNS ${7:@retFindReports} TABLE ",
        "(",
        "    -- columns returned by the function",
        "    ${8:EmployeeID} ${9:int} NOT NULL,",
        "    ${10:Name} ${11:nvarchar(255)} NOT NULL,",
        "    ${12:Title} ${13:nvarchar(50)} NOT NULL,",
        "    ${14:EmployeeLevel} ${15:int} NOT NULL",
        ")",
        "AS",
        "-- body of the function",
        "BEGIN",
        "   WITH DirectReports(Name, Title, EmployeeID, EmployeeLevel, Sort) AS",
        "    (SELECT CONVERT(varchar(255), c.FirstName + ' ' + c.LastName),",
        "        e.Title,",
        "        e.EmployeeID,",
        "        1,",
        "        CONVERT(varchar(255), c.FirstName + ' ' + c.LastName)",
        "     FROM HumanResources.Employee AS e",
        "          JOIN Person.Contact AS c ON e.ContactID = c.ContactID ",
        "     WHERE e.EmployeeID = @InEmpID",
        "   UNION ALL",
        "     SELECT CONVERT(varchar(255), REPLICATE ('| ' , EmployeeLevel) +",
        "        c.FirstName + ' ' + c.LastName),",
        "        e.Title,",
        "        e.EmployeeID,",
        "        EmployeeLevel + 1,",
        "        CONVERT (varchar(255), RTRIM(Sort) + '| ' + FirstName + ' ' + ",
        "                 LastName)",
        "     FROM HumanResources.Employee as e",
        "          JOIN Person.Contact AS c ON e.ContactID = c.ContactID",
        "          JOIN DirectReports AS d ON e.ManagerID = d.EmployeeID",
        "    )",
        "   -- copy the required columns to the result of the function ",
        "",
        "   INSERT @retFindReports",
        "   SELECT EmployeeID, Name, Title, EmployeeLevel",
        "     FROM DirectReports ",
        "   ORDER BY Sort",
        "   RETURN",
        "END",
        "GO",
        "",
        "",
        ""
    ],
    "description": "Create Multi-statement Table-valued Function"
},"Create Natively Compiled Scalar Function":{
    "scope": "sql",
    "prefix": "ssmsCreateNativelyCompiledScalarFunction",
    "body": [
        "-- ================================================",
        "-- Template generated from Template Explorer using:",
        "-- Create Natively Compiled Scalar Function.SQL",
        "--",
        "-- Use the Specify Values for Template Parameters ",
        "-- command (Ctrl-Shift-M) to fill in the parameter ",
        "-- values below.",
        "--",
        "-- This block of comments will not be included in",
        "-- the definition of the function.",
        "-- ================================================",
        "",
        "USE [${1:AdventureWorks}]",
        "GO",
        "",
        "SET ANSI_NULLS ON",
        "GO",
        "SET QUOTED_IDENTIFIER ON",
        "GO",
        "-- =============================================",
        "-- Author:\t\t${2:Name}",
        "-- Create date: ${3:}",
        "-- Description:\t${4:}",
        "-- =============================================",
        "CREATE FUNCTION [${5:FunctionName}] ",
        "(",
        "\t-- Add the parameters for the function here",
        "\t${6:@p1} ${7:int}",
        ")",
        "RETURNS ${8:int}",
        "WITH NATIVE_COMPILATION, SCHEMABINDING",
        "AS",
        "BEGIN ATOMIC WITH",
        "(",
        "\tTRANSACTION ISOLATION LEVEL = ${9:SNAPSHOT}, LANGUAGE = ${10:N'us_english'}",
        ")",
        "\t-- Declare the return variable here",
        "\tDECLARE ${11:@Result} ${8:int}",
        "",
        "\t-- Add the T-SQL statements to compute the return value here",
        "\tSELECT ${11:@Result} = ${6:@p1}",
        "",
        "\t-- Return the result of the function",
        "\tRETURN ${11:@Result}",
        "",
        "END",
        "GO",
        "",
        ""
    ],
    "description": "Create Natively Compiled Scalar Function"
},"Create Scalar Function (New Menu)":{
    "scope": "sql",
    "prefix": "ssmsCreateScalarFunction(NewMenu)",
    "body": [
        "-- ================================================",
        "-- Template generated from Template Explorer using:",
        "-- Create Scalar Function (New Menu).SQL",
        "--",
        "-- Use the Specify Values for Template Parameters ",
        "-- command (Ctrl-Shift-M) to fill in the parameter ",
        "-- values below.",
        "--",
        "-- This block of comments will not be included in",
        "-- the definition of the function.",
        "-- ================================================",
        "SET ANSI_NULLS ON",
        "GO",
        "SET QUOTED_IDENTIFIER ON",
        "GO",
        "-- =============================================",
        "-- Author:\t\t${1:Name}",
        "-- Create date: ${2:}",
        "-- Description:\t${3:}",
        "-- =============================================",
        "CREATE FUNCTION ${4:FunctionName} ",
        "(",
        "\t-- Add the parameters for the function here",
        "\t${5:@p1} ${6:int}",
        ")",
        "RETURNS ${7:int}",
        "AS",
        "BEGIN",
        "\t-- Declare the return variable here",
        "\tDECLARE ${8:@Result} ${7:int}",
        "",
        "\t-- Add the T-SQL statements to compute the return value here",
        "\tSELECT ${8:@Result} = ${5:@p1}",
        "",
        "\t-- Return the result of the function",
        "\tRETURN ${8:@Result}",
        "",
        "END",
        "GO",
        "",
        ""
    ],
    "description": "Create Scalar Function (New Menu)"
},"Create Scalar-valued Function":{
    "scope": "sql",
    "prefix": "ssmsCreateScalar-valuedFunction",
    "body": [
        "--=========================================",
        "-- Create scalar-valued function template",
        "--=========================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID (N'${2:dbo}.${3:centigrade_to_farenheit}') IS NOT NULL",
        "   DROP FUNCTION ${2:dbo}.${3:centigrade_to_farenheit}",
        "GO",
        "",
        "CREATE FUNCTION ${2:dbo}.${3:centigrade_to_farenheit} (${4:@centigrade} ${5:float})",
        "RETURNS ${6:float}",
        "WITH EXECUTE AS CALLER",
        "AS",
        "-- place the body of the function here",
        "BEGIN",
        "     ${7:RETURN((@centigrade * 1.8) + 32.0)}",
        "END",
        "GO",
        ""
    ],
    "description": "Create Scalar-valued Function"
},"Drop Function":{
    "scope": "sql",
    "prefix": "ssmsDropFunction",
    "body": [
        " --================================================",
        "-- Drop function template",
        "--================================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID (N'${2:dbo}.${3:EmployeeByID}') IS NOT NULL",
        "   DROP FUNCTION ${2:dbo}.${3:EmployeeByID}",
        "GO",
        ""
    ],
    "description": "Drop Function"
},"Create Inline Function (New Menu)":{
    "scope": "sql",
    "prefix": "ssmsCreateInlineFunction(NewMenu)",
    "body": [
        "-- =========================================================",
        "-- Create Inline Function Template for Azure SQL Database",
        "-- =========================================================",
        "SET ANSI_NULLS ON",
        "GO",
        "SET QUOTED_IDENTIFIER ON",
        "GO",
        "-- =============================================",
        "-- Author:\t\t${1:Name}",
        "-- Create date: ${2:}",
        "-- Description:\t${3:}",
        "-- =============================================",
        "CREATE FUNCTION ${4:FunctionName} ",
        "(\t",
        "\t-- Add the parameters for the function here",
        "\t${5:@p1} ${6:int}, ",
        "\t${7:@p2} ${8:char}",
        ")",
        "RETURNS TABLE ",
        "AS",
        "RETURN ",
        "(",
        "\t-- Add the SELECT statement with parameter references here",
        "\tSELECT 0 AS ${9:column_name}",
        ")",
        "GO",
        ""
    ],
    "description": "Create Inline Function (New Menu)"
},"Create Inline Table-valued Function":{
    "scope": "sql",
    "prefix": "ssmsCreateInlineTable-valuedFunction",
    "body": [
        "--========================================================================",
        "--  Create Inline Table-valued Function template for Azure SQL Database",
        "--========================================================================",
        "IF OBJECT_ID (N'${1:dbo}.${2:EmployeeByID}') IS NOT NULL",
        "    DROP FUNCTION ${1:dbo}.${2:EmployeeByID}",
        "GO",
        "",
        "CREATE FUNCTION ${1:dbo}.${2:EmployeeByID}(${3:@employeeID} ${4:int})",
        "RETURNS TABLE",
        "AS RETURN",
        "(",
        "\t${5:SELECT * FROM HumanResources.Employee WHERE EmployeeID = @employeeID}",
        ")",
        "GO",
        ""
    ],
    "description": "Create Inline Table-valued Function"
},"Create Multi-statement Function (New Menu)":{
    "scope": "sql",
    "prefix": "ssmsCreateMulti-statementFunction(NewMenu)",
    "body": [
        "-- ==================================================================",
        "-- Create Multi-Statement Function template for Azure SQL Database",
        "-- ==================================================================",
        "SET ANSI_NULLS ON",
        "GO",
        "SET QUOTED_IDENTIFIER ON",
        "GO",
        "-- =============================================",
        "-- Author:\t\t${1:Name}",
        "-- Create date: ${2:}",
        "-- Description:\t${3:}",
        "-- =============================================",
        "CREATE FUNCTION ${4:FunctionName} ",
        "(",
        "\t-- Add the parameters for the function here",
        "\t${5:@p1} ${6:int}, ",
        "\t${7:@p2} ${8:char}",
        ")",
        "RETURNS ",
        "${9:@Table_Var} TABLE ",
        "(",
        "\t-- Add the column definitions for the TABLE variable here",
        "\t${10:c1} ${11:int}, ",
        "\t${12:c2} ${13:int}",
        ")",
        "AS",
        "BEGIN",
        "\t-- Fill the table variable with the rows for your result set",
        "\t",
        "\tRETURN ",
        "END",
        "GO",
        ""
    ],
    "description": "Create Multi-statement Function (New Menu)"
},"Create Multi-statement Table-valued Function":{
    "scope": "sql",
    "prefix": "ssmsCreateMulti-statementTable-valuedFunction",
    "body": [
        "--=======================================================================",
        "-- Create Multi-statement Table-valued Function for Azure SQL Database",
        "--=======================================================================",
        "IF OBJECT_ID (N'${1:dbo}.${2:EmployeeByID}') IS NOT NULL",
        "   DROP FUNCTION ${1:dbo}.${2:EmployeeByID}",
        "GO",
        "",
        "CREATE FUNCTION ${1:dbo}.${3:fn_FindReports}(${4:@InEmpID} ${5:int})",
        "RETURNS ${6:@retFindReports} TABLE ",
        "(",
        "    -- columns returned by the function",
        "    ${7:EmployeeID} ${8:int} NOT NULL,",
        "    ${9:Name} ${10:nvarchar(255)} NOT NULL,",
        "    ${11:Title} ${12:nvarchar(50)} NOT NULL,",
        "    ${13:EmployeeLevel} ${14:int} NOT NULL",
        ")",
        "AS",
        "-- body of the function",
        "BEGIN",
        "   WITH DirectReports(Name, Title, EmployeeID, EmployeeLevel, Sort) AS",
        "    (SELECT CONVERT(varchar(255), c.FirstName + ' ' + c.LastName),",
        "        e.Title,",
        "        e.EmployeeID,",
        "        1,",
        "        CONVERT(varchar(255), c.FirstName + ' ' + c.LastName)",
        "     FROM HumanResources.Employee AS e",
        "          JOIN Person.Contact AS c ON e.ContactID = c.ContactID ",
        "     WHERE e.EmployeeID = @InEmpID",
        "   UNION ALL",
        "     SELECT CONVERT(varchar(255), REPLICATE ('| ' , EmployeeLevel) +",
        "        c.FirstName + ' ' + c.LastName),",
        "        e.Title,",
        "        e.EmployeeID,",
        "        EmployeeLevel + 1,",
        "        CONVERT (varchar(255), RTRIM(Sort) + '| ' + FirstName + ' ' + ",
        "                 LastName)",
        "     FROM HumanResources.Employee as e",
        "          JOIN Person.Contact AS c ON e.ContactID = c.ContactID",
        "          JOIN DirectReports AS d ON e.ManagerID = d.EmployeeID",
        "    )",
        "   -- copy the required columns to the result of the function ",
        "",
        "   INSERT @retFindReports",
        "   SELECT EmployeeID, Name, Title, EmployeeLevel",
        "     FROM DirectReports ",
        "   ORDER BY Sort",
        "   RETURN",
        "END",
        "GO",
        "",
        "",
        ""
    ],
    "description": "Create Multi-statement Table-valued Function"
},"Create Natively Compiled Scalar Function":{
    "scope": "sql",
    "prefix": "ssmsCreateNativelyCompiledScalarFunction",
    "body": [
        "-- ================================================",
        "-- Template generated from Template Explorer using:",
        "-- Create Natively Compiled Scalar Function.SQL",
        "--",
        "-- Use the Specify Values for Template Parameters ",
        "-- command (Ctrl-Shift-M) to fill in the parameter ",
        "-- values below.",
        "--",
        "-- This block of comments will not be included in",
        "-- the definition of the function.",
        "-- ================================================",
        "",
        "SET ANSI_NULLS ON",
        "GO",
        "SET QUOTED_IDENTIFIER ON",
        "GO",
        "-- =============================================",
        "-- Author:\t\t${1:Name}",
        "-- Create date: ${2:}",
        "-- Description:\t${3:}",
        "-- =============================================",
        "CREATE FUNCTION [${4:FunctionName}] ",
        "(",
        "\t-- Add the parameters for the function here",
        "\t${5:@p1} ${6:int}",
        ")",
        "RETURNS ${7:int}",
        "WITH NATIVE_COMPILATION, SCHEMABINDING",
        "AS",
        "BEGIN ATOMIC WITH",
        "(",
        "\tTRANSACTION ISOLATION LEVEL = ${8:SNAPSHOT}, LANGUAGE = ${9:N'us_english'}",
        ")",
        "\t-- Declare the return variable here",
        "\tDECLARE ${10:@Result} ${7:int}",
        "",
        "\t-- Add the T-SQL statements to compute the return value here",
        "\tSELECT ${10:@Result} = ${5:@p1}",
        "",
        "\t-- Return the result of the function",
        "\tRETURN ${10:@Result}",
        "",
        "END",
        "GO",
        "",
        ""
    ],
    "description": "Create Natively Compiled Scalar Function"
},"Create Scalar Function (New Menu)":{
    "scope": "sql",
    "prefix": "ssmsCreateScalarFunction(NewMenu)",
    "body": [
        "-- ======================================================",
        "-- Create Scalar Function Template for Azure SQL Database",
        "-- ======================================================",
        "SET ANSI_NULLS ON",
        "GO",
        "SET QUOTED_IDENTIFIER ON",
        "GO",
        "-- =============================================",
        "-- Author:      ${1:Name}",
        "-- Create Date: ${2:}",
        "-- Description: ${3:}",
        "-- =============================================",
        "CREATE FUNCTION ${4:FunctionName}",
        "(",
        "    -- Add the parameters for the function here",
        "    ${5:@p1} ${6:int}",
        ")",
        "RETURNS ${7:int}",
        "AS",
        "BEGIN",
        "    -- Declare the return variable here",
        "    DECLARE ${8:@Result} ${7:int}",
        "",
        "    -- Add the T-SQL statements to compute the return value here",
        "    SELECT ${8:@Result} = ${5:@p1}",
        "",
        "    -- Return the result of the function",
        "    RETURN ${8:@Result}",
        "END",
        "GO",
        "",
        ""
    ],
    "description": "Create Scalar Function (New Menu)"
},"Create Scalar Function DW (New Menu)":{
    "scope": "sql",
    "prefix": "ssmsCreateScalarFunctionDW(NewMenu)",
    "body": [
        "-- =====================================================================",
        "-- Create Scalar Function Template for Azure SQL Data Warehouse Database",
        "-- =====================================================================",
        "SET ANSI_NULLS ON",
        "GO",
        "SET QUOTED_IDENTIFIER ON",
        "GO",
        "-- =============================================",
        "-- Author:      ${1:Name}",
        "-- Create Date: ${2:}",
        "-- Description: ${3:}",
        "-- =============================================",
        "CREATE FUNCTION ${4:FunctionName}",
        "(",
        "    -- Add the parameters for the function here",
        "    ${5:@p1} ${6:int}",
        ")",
        "RETURNS ${7:int}",
        "AS",
        "BEGIN",
        "    -- Declare the return variable here",
        "    DECLARE ${8:@Result} ${7:int}",
        "",
        "    -- Add the T-SQL statements to compute the return value here",
        "    SET ${8:@Result} = ${5:@p1}",
        "",
        "    -- Return the result of the function",
        "    RETURN ${8:@Result}",
        "END",
        "GO",
        "",
        ""
    ],
    "description": "Create Scalar Function DW (New Menu)"
},"create scalar-valued function":{
    "scope": "sql",
    "prefix": "ssmscreatescalar-valuedfunction",
    "body": [
        "--=================================================================",
        "-- Create scalar-valued function template for Azure SQL Database",
        "--=================================================================",
        "IF OBJECT_ID (N'${1:dbo}.${2:centigrade_to_farenheit}') IS NOT NULL",
        "   DROP FUNCTION ${1:dbo}.${2:centigrade_to_farenheit}",
        "GO",
        "",
        "CREATE FUNCTION ${1:dbo}.${2:centigrade_to_farenheit} (${3:@centigrade} ${4:float})",
        "RETURNS ${5:float}",
        "WITH EXECUTE AS CALLER",
        "AS",
        "-- place the body of the function here",
        "BEGIN",
        "     ${6:RETURN((@centigrade * 1.8) + 32.0)}",
        "END",
        "GO",
        ""
    ],
    "description": "create scalar-valued function"
},"Drop Function":{
    "scope": "sql",
    "prefix": "ssmsDropFunction",
    "body": [
        " --===================================================================================",
        "-- Drop function template for Azure SQL Database and Azure SQL Data Warehouse Database",
        "--====================================================================================",
        "IF OBJECT_ID (N'${1:dbo}.${2:EmployeeByID}') IS NOT NULL",
        "   DROP FUNCTION ${1:dbo}.${2:EmployeeByID}",
        "GO",
        ""
    ],
    "description": "Drop Function"
}}