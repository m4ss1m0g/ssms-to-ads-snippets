{"Add Memory Optimized Trigger":{
    "scope": "sql",
    "prefix": "ssmsAddMemoryOptimizedTrigger",
    "body": [
        "--======================================================",
        "-- Add Trigger to a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a trigger to a memory optimized table.",
        "--======================================================",
        "",
        "CREATE TRIGGER [${1:dbo}].[${2:memory_optimized_trigger}]",
        "\tON [${1:dbo}].[${3:memory_optimized_table}]",
        "\tWITH NATIVE_COMPILATION, SCHEMABINDING",
        "\tAFTER ${4:INSERT}",
        "AS BEGIN ATOMIC WITH",
        "(",
        " TRANSACTION ISOLATION LEVEL = ${5:SNAPSHOT}, LANGUAGE = ${6:N'us_english'}",
        ")",
        "   --Insert statements for the trigger here",
        "   ${7:declare @v int; select @v = count(*) from inserted}",
        "END",
        "GO",
        ""
    ],
    "description": "Add Memory Optimized Trigger"
},"Create External Table DW":{
    "scope": "sql",
    "prefix": "ssmsCreateExternalTableDW",
    "body": [
        "-- ====================================================================",
        "-- Create External Table Template for Azure SQL Data Warehouse Database",
        "-- ====================================================================",
        "",
        "IF OBJECT_ID('${1:dbo}.${2:sample_external_table}', 'U') IS NOT NULL",
        "    DROP EXTERNAL TABLE ${1:dbo}.${2:sample_external_table}",
        "GO",
        "",
        "CREATE EXTERNAL TABLE ${1:dbo}.${2:sample_external_table}",
        "(",
        "    ${3:c1} ${4:int} ${5:NOT NULL},",
        "    ${6:c2} ${7:char(10)} ${8:NULL},",
        "    ${9:c3} ${10:datetime} ${11:NULL}",
        ")",
        "WITH",
        "(",
        "    LOCATION = N'${12:sample_location}',",
        "    DATA_SOURCE = ${13:sample_data_source},",
        "    FILE_FORMAT = ${14:sample_file_format},",
        "    REJECT_TYPE = ${15:sample_reject_type},",
        "    REJECT_VALUE = ${16:sample_reject_value},",
        "    REJECT_SAMPLE_VALUE = ${17:sample_reject_sample_value},",
        "    REJECTED_ROW_LOCATION = N'${18:sample_rejected_row_location}' -- Optional Property",
        ")",
        "GO"
    ],
    "description": "Create External Table DW"
},"Create External Table SqlOnDemand":{
    "scope": "sql",
    "prefix": "ssmsCreateExternalTableSqlOnDemand",
    "body": [
        "-- ========================================================================================================",
        "-- Create external data source template for Azure Synapse SQL Analytics on-demand",
        "-- SQL on-demand supports only LOCATION, DATA_SOURCE and FILE_FORMAT arguments within CREATE EXTERNAL TABLE",
        "-- ========================================================================================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_external_table}', 'U') IS NOT NULL",
        "    DROP EXTERNAL TABLE ${2:dbo}.${3:sample_external_table}",
        "GO",
        "",
        "CREATE EXTERNAL TABLE ${2:dbo}.${3:sample_external_table}",
        "(",
        "    ${4:c1} ${5:int} ${6:},",
        "    ${7:c2} ${8:char(10)} ${9:},",
        "    ${10:c3} ${11:datetime} ${12:}",
        ")",
        "WITH",
        "(",
        "    LOCATION = N'${13:sample_location}',",
        "    DATA_SOURCE = ${14:sample_data_source},",
        "    FILE_FORMAT = ${15:sample_file_format},",
        ")",
        "GO"
    ],
    "description": "Create External Table SqlOnDemand"
},"Create External Table":{
    "scope": "sql",
    "prefix": "ssmsCreateExternalTable",
    "body": [
        "-- =====================================================",
        "-- Create External Table Template for Azure SQL Database",
        "-- =====================================================",
        "",
        "IF OBJECT_ID('${1:dbo}.${2:sample_external_table}', 'U') IS NOT NULL",
        "    DROP EXTERNAL TABLE ${1:dbo}.${2:sample_external_table}",
        "GO",
        "",
        "CREATE EXTERNAL TABLE ${1:dbo}.${2:sample_external_table}",
        "(",
        "    ${3:c1} ${4:int} ${5:NOT NULL},",
        "    ${6:c2} ${7:char(10)} ${8:NULL},",
        "    ${9:c3} ${10:datetime} ${11:NULL}",
        ")",
        "WITH",
        "(",
        "    DATA_SOURCE = ${12:sample_data_source},",
        "    -- The sharding column name is only applicable when using SHARDED distribution.",
        "    DISTRIBUTION = ${13:sample_distribution}(${14:c1})",
        ")",
        "GO"
    ],
    "description": "Create External Table"
},"Create Graph Edge Constraint":{
    "scope": "sql",
    "prefix": "ssmsCreateGraphEdgeConstraint",
    "body": [
        "-- =========================================== ",
        "-- Create Graph Edge Constraint Template",
        "",
        "-- This template creates an Edge Constraint on",
        "-- a Graph Edge Table. Edge constraints can be",
        "-- used to enforce data integrity and specific",
        "-- semantics on edge tables in SQL Server ",
        "-- graph database. ",
        "-- ===========================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO ",
        "",
        "ALTER TABLE ${2:dbo}.${3:sample_edgetable}",
        "   ADD CONSTRAINT ${4:}",
        "   CONNECTION (${5:}, ${6:} TO ${6:})",
        "   ON DELETE { NO ACTION | CASCADE }",
        "GO"
    ],
    "description": "Create Graph Edge Constraint"
},"Create Graph Edge Table":{
    "scope": "sql",
    "prefix": "ssmsCreateGraphEdgeTable",
    "body": [
        "-- =========================================",
        "-- Create Graph Edge Table Template",
        "-- =========================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "DROP TABLE IF EXISTS ${2:dbo}.${3:sample_edgetable}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_edgetable}",
        "(",
        "    -- Columns are optional for Graph Edge Tables.",
        "    --",
        "    ${4:c1} ${5:int} ${6:NOT NULL},",
        "    ${7:c2} ${8:char(10)} ${9:NULL},",
        "    ${10:c3} ${11:datetime} ${12:NULL},",
        "",
        "    -- System generated edge constraint.",
        "    --",
        "    CONNECTION (${13:}),",
        "",
        "    CONSTRAINT EC_${14:} CONNECTION (${13:}, ${15:} TO ${15:}),",
        "    -- Unique index on $edge_id is required.",
        "    -- If no user-defined index is specified, a default index is created.",
        "    --",
        "    INDEX ix_graphid UNIQUE ($edge_id),",
        "",
        "    -- indexes on $from_id and $to_id are optional, but support faster lookups.",
        "    --",
        "    INDEX ix_fromid ($from_id, $to_id),",
        "    INDEX ix_toid ($to_id, $from_id)",
        ")",
        "AS EDGE",
        "GO",
        ""
    ],
    "description": "Create Graph Edge Table"
},"Create Graph Node Table":{
    "scope": "sql",
    "prefix": "ssmsCreateGraphNodeTable",
    "body": [
        "-- =========================================",
        "-- Create Graph Node Template",
        "-- =========================================",
        "",
        "IF OBJECT_ID('${1:dbo}.${2:sample_nodetable}', 'U') IS NOT NULL",
        "  DROP TABLE ${1:dbo}.${2:sample_nodetable}",
        "GO",
        "",
        "CREATE TABLE ${1:dbo}.${2:sample_nodetable}",
        "(",
        "    ${3:c1} ${4:int} ${5:NOT NULL},",
        "    ${6:c2} ${7:char(10)} ${8:NULL},",
        "    ${9:c3} ${10:datetime} ${11:NULL},",
        "",
        "    -- Unique index on $node_id is required.",
        "    -- If no user-defined index is specified, a default index is created.",
        "    INDEX ix_graphid UNIQUE ($node_id)",
        ")",
        "AS NODE",
        "GO",
        ""
    ],
    "description": "Create Graph Node Table"
},"Create Memory Optimized Table":{
    "scope": "sql",
    "prefix": "ssmsCreateMemoryOptimizedTable",
    "body": [
        "--======================================================",
        "-- Create Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template creates a memory optimized table and indexes on the memory optimized table.",
        "-- The database must have a MEMORY_OPTIMIZED_DATA filegroup before the memory optimized table can be created.",
        "--======================================================",
        "",
        "--Drop table if it already exists.",
        "IF OBJECT_ID('${1:dbo}.${2:sample_memoryoptimizedtable}','U') IS NOT NULL",
        "    DROP TABLE ${1:dbo}.${2:sample_memoryoptimizedtable}",
        "GO",
        "",
        "CREATE TABLE ${1:dbo}.${2:sample_memoryoptimizedtable}",
        "(",
        "\t${3:c1} ${4:int} ${5:NOT NULL}, ",
        "\t${6:c2} ${7:float} ${8:NOT NULL},",
        "\t${9:c3} ${10:decimal(10,2)} ${11:NOT NULL} INDEX ${12:index_sample_memoryoptimizedtable_c3} NONCLUSTERED (${9:c3}), ",
        "",
        "   CONSTRAINT ${13:PK_sample_memoryoptimizedtable} PRIMARY KEY NONCLUSTERED (${14:c1}),",
        "   -- See SQL Server Books Online for guidelines on determining appropriate bucket count for the index",
        "   INDEX ${15:hash_index_sample_memoryoptimizedtable_c2} HASH (${6:c2}) WITH (BUCKET_COUNT = ${16:131072})",
        ") WITH (MEMORY_OPTIMIZED = ON, DURABILITY = ${17:SCHEMA_AND_DATA})",
        "GO"
    ],
    "description": "Create Memory Optimized Table"
},"Create SQL DW Partitioned Table":{
    "scope": "sql",
    "prefix": "ssmsCreateSQLDWPartitionedTable",
    "body": [
        "-- =======================================================================",
        "-- Create Partitioned Table Template for Azure SQL Data Warehouse Database",
        "-- =======================================================================",
        "",
        "IF OBJECT_ID('${1:dbo}.${2:sample_table}', 'U') IS NOT NULL",
        "    DROP TABLE ${1:dbo}.${2:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${1:dbo}.${2:sample_table}",
        "(",
        "    ${3:c1} ${4:int} ${5:NOT NULL},",
        "    ${6:c2} ${7:char(10)} ${8:NULL},",
        "    ${9:c3} ${10:datetime} ${11:NULL}",
        ")",
        "WITH",
        "(",
        "    DISTRIBUTION = HASH (${12:c1}),",
        "    CLUSTERED COLUMNSTORE INDEX,",
        "    PARTITION (${13:c3} RANGE RIGHT FOR VALUES (${14:n}))",
        ")",
        "GO"
    ],
    "description": "Create SQL DW Partitioned Table"
},"Create SQL DW Table":{
    "scope": "sql",
    "prefix": "ssmsCreateSQLDWTable",
    "body": [
        "-- ===========================================================",
        "-- Create Table Template for Azure SQL Data Warehouse Database",
        "-- ===========================================================",
        "",
        "IF OBJECT_ID('${1:dbo}.${2:sample_table}', 'U') IS NOT NULL",
        "    DROP TABLE ${1:dbo}.${2:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${1:dbo}.${2:sample_table}",
        "(",
        "    ${3:c1} ${4:int} ${5:NOT NULL},",
        "    ${6:c2} ${7:char(10)} ${8:NULL},",
        "    ${9:c3} ${10:datetime} ${11:NULL}",
        ")",
        "WITH",
        "(",
        "    DISTRIBUTION = HASH (${12:c1}),",
        "    CLUSTERED COLUMNSTORE INDEX",
        ")",
        "GO"
    ],
    "description": "Create SQL DW Table"
},"Create System-Versioned Table":{
    "scope": "sql",
    "prefix": "ssmsCreateSystem-VersionedTable",
    "body": [
        "-- =========================================",
        "-- Create system-versioned temporal table template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- ",
        "-- This template creates a system-versioned temporal table.",
        "-- ",
        "-- For more details on system-versioned temporal tables please refer to MSDN documentation:",
        "-- https://msdn.microsoft.com/en-IN/library/dn935015.aspx#Anchor_0",
        "-- ",
        "-- To learn more how to use system-versioned tables in your applications, take a look at \"Getting Started with System-Versioned Temporal Tables\":",
        "-- https://msdn.microsoft.com/en-US/library/mt604462.aspx",
        "-- =========================================",
        "",
        "BEGIN",
        "    --If table is system-versioned, SYSTEM_VERSIONING must be set to OFF first ",
        "    IF ((SELECT temporal_type FROM sys.tables WHERE object_id = OBJECT_ID('${1:dbo}.${2:sample_table}', 'U')) = 2)",
        "    BEGIN",
        "        ALTER TABLE [${1:dbo}].[${2:sample_table}] SET (SYSTEM_VERSIONING = OFF)",
        "    END",
        "    DROP TABLE IF EXISTS [${1:dbo}].[${2:sample_table}]",
        "END",
        "GO",
        "",
        "--Create system-versioned temporal table. It must have primary key and two datetime2 columns that are part of SYSTEM_TIME period definition",
        "CREATE TABLE [${1:dbo}].[${2:sample_table}]",
        "(",
        "    ${3:c1} ${4:int} ${5:NOT NULL},",
        "    ${6:c2} ${7:char(10)} ${8:NULL},",
        "    ${9:c3} ${10:datetime} ${11:NULL},",
        "",
        "    --Period columns and PERIOD FOR SYSTEM_TIME definition",
        "    ${12:SysStartTime} datetime2(7) GENERATED ALWAYS AS ROW START ${13:} NOT NULL ,",
        "    ${14:SysEndTime} datetime2(7) GENERATED ALWAYS AS ROW END ${15:} NOT NULL ,",
        "    PERIOD FOR SYSTEM_TIME(${12:SysStartTime},${14:SysEndTime}),",
        "",
        "    --Primary key definition",
        "    CONSTRAINT ${16:PK_sampletable} PRIMARY KEY (${3:c1})",
        ")",
        "WITH",
        "(",
        "    --Set SYSTEM_VERSIONING to ON and provide reference to HISTORY_TABLE. ",
        "    SYSTEM_VERSIONING = ON ",
        "    (",
        "        --If HISTORY_TABLE does not exists, default table will be created.",
        "        HISTORY_TABLE = [${17:dbo}].[${18:sample_table_history}],",
        "        --Specifies whether data consistency check will be performed across current and history tables (default is ON)",
        "        DATA_CONSISTENCY_CHECK = ${19:ON}",
        "    )",
        ")",
        "GO",
        ""
    ],
    "description": "Create System-Versioned Table"
},"Create Table":{
    "scope": "sql",
    "prefix": "ssmsCreateTable",
    "body": [
        "-- ========================================",
        "-- Create table template Azure SQL Database ",
        "-- ========================================",
        "",
        "IF OBJECT_ID('${1:dbo}.${2:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${1:dbo}.${2:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${1:dbo}.${2:sample_table}",
        "(",
        "\t${3:c1} ${4:int} ${5:NOT NULL}, ",
        "\t${6:c2} ${7:char(10)} ${8:NULL}, ",
        "\t${9:c3} ${10:datetime} ${11:NULL}, ",
        "    CONSTRAINT ${12:PK_sample_table} PRIMARY KEY (${3:c1})",
        ")",
        "GO",
        ""
    ],
    "description": "Create Table"
},"Drop External Table":{
    "scope": "sql",
    "prefix": "ssmsDropExternalTable",
    "body": [
        "--==========================================================================================",
        "-- Drop External Table template for Azure SQL Database and Azure SQL Data Warehouse Database ",
        "--==========================================================================================",
        "IF EXISTS (",
        "  SELECT *",
        "\tFROM sys.tables",
        "\tJOIN sys.schemas",
        "\t  ON sys.tables.schema_id = sys.schemas.schema_id",
        "   WHERE sys.schemas.name = N'${1:your_schema_name}'",
        "     AND sys.tables.name = N'${2:your_external_table_name}'",
        ")",
        "DROP EXTERNAL TABLE ${1:your_schema_name}.${2:your_external_table_name}",
        "GO"
    ],
    "description": "Drop External Table"
},"Drop Table":{
    "scope": "sql",
    "prefix": "ssmsDropTable",
    "body": [
        "--=================================================================================",
        "-- Drop Table template for Azure SQL Database and Azure SQL Data Warehouse Database ",
        "--=================================================================================",
        "IF EXISTS (",
        "  SELECT *",
        "\tFROM sys.tables",
        "\tJOIN sys.schemas",
        "\t  ON tables.schema_id = schemas.schema_id",
        "   WHERE schemas.name = N'${1:your_schema_name}'",
        "\t AND tables.name = N'${2:your_table_name}'",
        ")",
        "  DROP TABLE ${1:your_schema_name}.${2:your_table_name}",
        "GO",
        ""
    ],
    "description": "Drop Table"
},"Add Column":{
    "scope": "sql",
    "prefix": "ssmsAddColumn",
    "body": [
        "--==========================================================================",
        "-- Add column template",
        "--",
        "-- This template creates a table, then it adds a new column to the table.",
        "--==========================================================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_table}",
        "(",
        "\tcolumn1 int      NOT NULL, ",
        "\tcolumn2 char(10) NULL",
        ")",
        "GO",
        "",
        "-- Add a new column to the table",
        "ALTER TABLE ${2:dbo}.${3:sample_table}",
        "\tADD ${4:column3} ${5:datetime} ${6:NULL}",
        "GO",
        ""
    ],
    "description": "Add Column"
},"Add Constraint":{
    "scope": "sql",
    "prefix": "ssmsAddConstraint",
    "body": [
        "-- ===========================================",
        "-- Add constraint template",
        "--",
        "-- This template creates a table, then it  ",
        "-- adds a CHECK CONSTRAINT to the table",
        "-- ===========================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_table}",
        "(",
        "\tcolumn1      int      NOT NULL, ",
        "\t${4:phone}        char(8)  NOT NULL",
        ")",
        "GO",
        "",
        "-- Add a new CHECK CONSTRAINT to the table",
        "ALTER TABLE ${2:dbo}.${3:sample_table}",
        "\tADD CONSTRAINT ${5:phone_chk} ${6:CHECK} (${4:phone} ${7:LIKE '[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]')}",
        "GO",
        "",
        ""
    ],
    "description": "Add Constraint"
},"Add Filestream Column":{
    "scope": "sql",
    "prefix": "ssmsAddFilestreamColumn",
    "body": [
        "--==========================================================================",
        "-- Add filestream column template",
        "--",
        "-- This template creates a table, then it adds a new filestream column to the table.",
        "--==========================================================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_table}",
        "(",
        "\tcolumn1 int      NOT NULL, ",
        "\tcolumn2 uniqueidentifier NOT NULL rowguidcol unique",
        ")",
        "GO",
        "",
        "-- Add a new column to the table",
        "ALTER TABLE ${2:dbo}.${3:sample_table}",
        "\tADD ${4:column3} varbinary(max) filestream ${5:NULL}",
        "GO",
        ""
    ],
    "description": "Add Filestream Column"
},"Add Key":{
    "scope": "sql",
    "prefix": "ssmsAddKey",
    "body": [
        "-- =============================================",
        "-- Add Key template",
        "--",
        "-- This template creates a table, then it  ",
        "-- adds a PRIMARY KEY constraint to the table",
        "-- =============================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_table}",
        "(",
        "\t${4:column1}      int      NOT NULL, ",
        "\tcolumn2      char(8)  NOT NULL",
        ")",
        "GO",
        "",
        "-- Add a new PRIMARY KEY CONSTRAINT to the table",
        "ALTER TABLE ${2:dbo}.${3:sample_table}",
        "  ADD CONSTRAINT ${5:PK_sample_table} PRIMARY KEY (${4:column1})",
        "GO",
        ""
    ],
    "description": "Add Key"
},"Add Memory Optimized Check Constraint":{
    "scope": "sql",
    "prefix": "ssmsAddMemoryOptimizedCheckConstraint",
    "body": [
        "--======================================================",
        "-- Add CHECK Constraint to a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a constraint to a memory optimized table.",
        "--======================================================",
        "USE [${1:memory_optimized_database}]",
        "GO",
        "",
        "ALTER TABLE [${2:dbo}].[${3:memory_optimized_table}]",
        "\tADD CONSTRAINT ${4:check_constraint_name}",
        "\t\tCHECK (${5:column_name} ${6:= 0})",
        "GO",
        ""
    ],
    "description": "Add Memory Optimized Check Constraint"
},"Add Memory Optimized Column":{
    "scope": "sql",
    "prefix": "ssmsAddMemoryOptimizedColumn",
    "body": [
        "--======================================================",
        "-- Add Column to a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a column to a memory optimized table.",
        "--======================================================",
        "USE [${1:memory_optimized_database}]",
        "GO",
        "",
        "ALTER TABLE [${2:dbo}].[${3:memory_optimized_table}]",
        "\tADD ${4:new_column} ${5:int} ${6:NULL}",
        "GO"
    ],
    "description": "Add Memory Optimized Column"
},"Add Memory Optimized Constraint":{
    "scope": "sql",
    "prefix": "ssmsAddMemoryOptimizedConstraint",
    "body": [
        "--======================================================",
        "-- Add Constraint to a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a constraint to a memory optimized table.",
        "--======================================================",
        "USE [${1:memory_optimized_database}]",
        "GO",
        "",
        "ALTER TABLE [${2:dbo}].[${3:memory_optimized_table}]",
        "\tADD CONSTRAINT ${4:default_constraint_name} ${5:DEFAULT} (${6:1.0}) FOR ${7:column_name}",
        "GO"
    ],
    "description": "Add Memory Optimized Constraint"
},"Add Memory Optimized Foreign Key":{
    "scope": "sql",
    "prefix": "ssmsAddMemoryOptimizedForeignKey",
    "body": [
        "--======================================================",
        "-- Add Foreign Key Constraint to a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a constraint to a memory optimized table.",
        "--======================================================",
        "USE [${1:memory_optimized_database}]",
        "GO",
        "",
        "ALTER TABLE [${2:dbo}].[${3:memory_optimized_table}]",
        "\tADD CONSTRAINT ${4:fk_constraint_name}",
        "\t\tFOREIGN KEY([${5:column_name}])",
        "\t\tREFERENCES [${2:dbo}].[${6:memory_optimized_table}] ([${7:referenced_column_name}])",
        "GO",
        ""
    ],
    "description": "Add Memory Optimized Foreign Key"
},"Add Memory Optimized Hash Index":{
    "scope": "sql",
    "prefix": "ssmsAddMemoryOptimizedHashIndex",
    "body": [
        "--======================================================",
        "-- Add Hash Index to a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a hash index to a memory optimized table.",
        "--======================================================",
        "USE [${1:memory_optimized_database}]",
        "GO",
        "",
        "ALTER TABLE [${2:dbo}].[${3:memory_optimized_table}]",
        "\tADD INDEX ${4:index_name} HASH (${5:column_name}) WITH (BUCKET_COUNT = ${6:131072})",
        "GO"
    ],
    "description": "Add Memory Optimized Hash Index"
},"Add Memory Optimized Key":{
    "scope": "sql",
    "prefix": "ssmsAddMemoryOptimizedKey",
    "body": [
        "--======================================================",
        "-- Add Primary Key to a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a primary key to a memory optimized table.",
        "--======================================================",
        "USE [${1:memory_optimized_database}]",
        "GO",
        "",
        "ALTER TABLE [${2:dbo}].[${3:memory_optimized_table}]",
        "\tADD CONSTRAINT ${4:default_key_name} PRIMARY KEY ${5:NONCLUSTERED} (${6:column_name})",
        "GO"
    ],
    "description": "Add Memory Optimized Key"
},"Add Memory Optimized Non Clustered Index":{
    "scope": "sql",
    "prefix": "ssmsAddMemoryOptimizedNonClusteredIndex",
    "body": [
        "--======================================================",
        "-- Add Non Clustered Index to a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a non clustered index to a memory optimized table.",
        "--======================================================",
        "USE [${1:memory_optimized_database}]",
        "GO",
        "",
        "ALTER TABLE [${2:dbo}].[${3:memory_optimized_table}]",
        "\tADD INDEX ${4:index_name} NONCLUSTERED (${5:column_name})",
        "GO"
    ],
    "description": "Add Memory Optimized Non Clustered Index"
},"Add Memory Optimized Trigger":{
    "scope": "sql",
    "prefix": "ssmsAddMemoryOptimizedTrigger",
    "body": [
        "--======================================================",
        "-- Add Trigger to a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a trigger to a memory optimized table.",
        "--======================================================",
        "USE [${1:memory_optimized_database}]",
        "GO",
        "",
        "CREATE TRIGGER [${2:dbo}].[${3:memory_optimized_trigger}]",
        "\tON [${2:dbo}].[${4:memory_optimized_table}]",
        "\tWITH NATIVE_COMPILATION, SCHEMABINDING",
        "\tAFTER ${5:INSERT}",
        "AS BEGIN ATOMIC WITH",
        "(",
        " TRANSACTION ISOLATION LEVEL = ${6:SNAPSHOT}, LANGUAGE = ${7:N'us_english'}",
        ")",
        "   --Insert statements for the trigger here",
        "   ${8:declare @v int; select @v = count(*) from inserted}",
        "END",
        "GO",
        ""
    ],
    "description": "Add Memory Optimized Trigger"
},"Add MEMORY_OPTIMIZED_DATA Filegroup and Create Memory Optimized Table Linux":{
    "scope": "sql",
    "prefix": "ssmsAddMEMORY_OPTIMIZED_DATAFilegroupandCreateMemoryOptimizedTableLinux",
    "body": [
        "--======================================================",
        "-- Add MEMORY_OPTIMIZED_DATA Filegroup and Create Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a MEMORY_OPTIMIZED_DATA filegroup to the database, and creates a memory optimized table and indexes on the memory optimized table.",
        "-- The database must have a MEMORY_OPTIMIZED_DATA filegroup before the memory optimized table can be created.",
        "--======================================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "--Add MEMORY_OPTIMIZED_DATA filegroup to the database.",
        "ALTER DATABASE ${2:Adventureworks}",
        "ADD FILEGROUP ${3:sample_database_filegroup} CONTAINS MEMORY_OPTIMIZED_DATA",
        "",
        "--Add file to the MEMORY_OPTIMIZED_DATA filegroup.",
        "ALTER DATABASE ${2:Adventureworks}",
        "ADD FILE",
        "\t( NAME = ${4:sample_database_filegroup_file1},",
        "\t  FILENAME = N'${5:/var/opt/mssql/data/sample_database_1}')",
        "TO FILEGROUP ${3:sample_database_filegroup}",
        "",
        "--Drop table if it already exists.",
        "IF OBJECT_ID('${6:dbo}.${7:sample_memoryoptimizedtable}','U') IS NOT NULL",
        "\tDROP TABLE ${6:dbo}.${7:sample_memoryoptimizedtable}",
        "GO",
        "",
        "--Create memory optimized table and indexes on the memory optimized table.",
        "CREATE TABLE ${6:dbo}.${7:sample_memoryoptimizedtable}",
        "(",
        "\t${8:c1} ${9:int} ${10:NOT NULL}, ",
        "\t${11:c2} ${12:float} ${13:NOT NULL},",
        "\t${14:c3} ${15:decimal(10,2)} ${16:NOT NULL} INDEX ${17:index_sample_memoryoptimizedtable_c3} NONCLUSTERED (${14:c3}), ",
        "",
        "\tCONSTRAINT ${18:PK_sample_memoryoptimizedtable} PRIMARY KEY NONCLUSTERED (${19:c1}),",
        "\t-- See SQL Server Books Online for guidelines on determining appropriate bucket count for the index",
        "\tINDEX ${20:hash_index_sample_memoryoptimizedtable_c2} HASH (${11:c2}) WITH (BUCKET_COUNT = ${21:131072})",
        ") WITH (MEMORY_OPTIMIZED = ON, DURABILITY = ${22:SCHEMA_AND_DATA})",
        "GO"
    ],
    "description": "Add MEMORY_OPTIMIZED_DATA Filegroup and Create Memory Optimized Table Linux"
},"Add MEMORY_OPTIMIZED_DATA Filegroup and Create Memory Optimized Table":{
    "scope": "sql",
    "prefix": "ssmsAddMEMORY_OPTIMIZED_DATAFilegroupandCreateMemoryOptimizedTable",
    "body": [
        "--======================================================",
        "-- Add MEMORY_OPTIMIZED_DATA Filegroup and Create Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds a MEMORY_OPTIMIZED_DATA filegroup to the database, and creates a memory optimized table and indexes on the memory optimized table.",
        "-- The database must have a MEMORY_OPTIMIZED_DATA filegroup before the memory optimized table can be created.",
        "--======================================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "--Add MEMORY_OPTIMIZED_DATA filegroup to the database.",
        "ALTER DATABASE ${2:Adventureworks}",
        "ADD FILEGROUP ${3:sample_database_filegroup} CONTAINS MEMORY_OPTIMIZED_DATA",
        "",
        "--Add file to the MEMORY_OPTIMIZED_DATA filegroup.",
        "ALTER DATABASE ${2:Adventureworks}",
        "ADD FILE",
        "  ( NAME = ${4:sample_database_filegroup_file1},",
        "    FILENAME = N'${5:C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\Data\\Datasample_database_1}')",
        "TO FILEGROUP ${3:sample_database_filegroup}",
        "",
        "--Drop table if it already exists.",
        "IF OBJECT_ID('${6:dbo}.${7:sample_memoryoptimizedtable}','U') IS NOT NULL",
        "    DROP TABLE ${6:dbo}.${7:sample_memoryoptimizedtable}",
        "GO",
        "",
        "--Create memory optimized table and indexes on the memory optimized table.",
        "CREATE TABLE ${6:dbo}.${7:sample_memoryoptimizedtable}",
        "(",
        "\t${8:c1} ${9:int} ${10:NOT NULL}, ",
        "\t${11:c2} ${12:float} ${13:NOT NULL},",
        "\t${14:c3} ${15:decimal(10,2)} ${16:NOT NULL} INDEX ${17:index_sample_memoryoptimizedtable_c3} NONCLUSTERED (${14:c3}), ",
        "",
        "   CONSTRAINT ${18:PK_sample_memoryoptimizedtable} PRIMARY KEY NONCLUSTERED (${19:c1}),",
        "   -- See SQL Server Books Online for guidelines on determining appropriate bucket count for the index",
        "   INDEX ${20:hash_index_sample_memoryoptimizedtable_c2} HASH (${11:c2}) WITH (BUCKET_COUNT = ${21:131072})",
        ") WITH (MEMORY_OPTIMIZED = ON, DURABILITY = ${22:SCHEMA_AND_DATA})",
        "GO"
    ],
    "description": "Add MEMORY_OPTIMIZED_DATA Filegroup and Create Memory Optimized Table"
},"Add System-Versioning":{
    "scope": "sql",
    "prefix": "ssmsAddSystem-Versioning",
    "body": [
        "--======================================================",
        "-- Adds temporal system-versioning to the table template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template adds temporal system-versioning to the table",
        "--======================================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "BEGIN",
        "    ALTER TABLE [${2:dbo}].[${3:sample_table}]",
        "\t  ADD ${4:SysStartTime} datetime2(7) GENERATED ALWAYS AS ROW START HIDDEN NOT NULL,",
        "          ${5:SysEndTime} datetime2(7) GENERATED ALWAYS AS ROW END HIDDEN NOT NULL,",
        "          PERIOD FOR SYSTEM_TIME(${4:SysStartTime},${5:SysEndTime})",
        "",
        "\t ALTER TABLE [${2:dbo}].[${3:sample_table}]",
        "\t   SET (SYSTEM_VERSIONING = ON (HISTORY_TABLE = [${6:dbo}].[${7:sample_table_history}]))",
        " END",
        "GO",
        ""
    ],
    "description": "Add System-Versioning"
},"Add Unique Constraint":{
    "scope": "sql",
    "prefix": "ssmsAddUniqueConstraint",
    "body": [
        "--======================",
        "-- Add Unique Constraint template",
        "--======================",
        "ALTER TABLE ${1:dbo}.${2:sample_table} ",
        "ADD CONSTRAINT ${3:UNQ_sample_table} UNIQUE (${4:column1}) ",
        "GO ",
        ""
    ],
    "description": "Add Unique Constraint"
},"Create External Table SqlOnDemand":{
    "scope": "sql",
    "prefix": "ssmsCreateExternalTableSqlOnDemand",
    "body": [
        "-- ========================================================================================================",
        "-- Create external data source template for Azure Synapse SQL Analytics on-demand",
        "-- SQL on-demand supports only LOCATION, DATA_SOURCE and FILE_FORMAT arguments within CREATE EXTERNAL TABLE",
        "-- ========================================================================================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_external_table}', 'U') IS NOT NULL",
        "    DROP EXTERNAL TABLE ${2:dbo}.${3:sample_external_table}",
        "GO",
        "",
        "CREATE EXTERNAL TABLE ${2:dbo}.${3:sample_external_table}",
        "(",
        "    ${4:c1} ${5:int} ${6:NOT NULL},",
        "    ${7:c2} ${8:char(10)} ${9:NULL},",
        "    ${10:c3} ${11:datetime} ${12:NULL}",
        ")",
        "WITH",
        "(",
        "    LOCATION = N'${13:sample_location}',",
        "    DATA_SOURCE = ${14:sample_data_source},",
        "    FILE_FORMAT = ${15:sample_file_format},",
        ")",
        "GO"
    ],
    "description": "Create External Table SqlOnDemand"
},"Create External Table":{
    "scope": "sql",
    "prefix": "ssmsCreateExternalTable",
    "body": [
        "-- ==============================",
        "-- Create External Table Template",
        "-- ==============================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_external_table}', 'U') IS NOT NULL",
        "    DROP EXTERNAL TABLE ${2:dbo}.${3:sample_external_table}",
        "GO",
        "",
        "CREATE EXTERNAL TABLE ${2:dbo}.${3:sample_external_table}",
        "(",
        "    ${4:c1} ${5:int} ${6:NOT NULL},",
        "    ${7:c2} ${8:char(10)} ${9:NULL},",
        "    ${10:c3} ${11:datetime} ${12:NULL}",
        ")",
        "WITH",
        "(",
        "    LOCATION = N'${13:sample_location}',",
        "    DATA_SOURCE = ${14:sample_data_source},",
        "    FILE_FORMAT = ${15:sample_file_format},",
        "    REJECT_TYPE = ${16:sample_reject_type},",
        "    REJECT_VALUE = ${17:sample_reject_value},",
        "    REJECT_SAMPLE_VALUE = ${18:sample_reject_sample_value}",
        ")",
        "GO"
    ],
    "description": "Create External Table"
},"Create FileTable":{
    "scope": "sql",
    "prefix": "ssmsCreateFileTable",
    "body": [
        "-- =========================================",
        "-- Create FileTable template",
        "-- =========================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_filetable}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_filetable}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_filetable} AS FILETABLE",
        "  WITH",
        "  (",
        "    FILETABLE_DIRECTORY = '${4:sample_filetable}',",
        "    FILETABLE_COLLATE_FILENAME = ${5:database_default}",
        "  )",
        "GO",
        ""
    ],
    "description": "Create FileTable"
},"Create Graph Edge Constraint":{
    "scope": "sql",
    "prefix": "ssmsCreateGraphEdgeConstraint",
    "body": [
        "-- =========================================== ",
        "-- Create Graph Edge Constraint Template",
        "",
        "-- This template creates an Edge Constraint on",
        "-- a Graph Edge Table. Edge constraints can be",
        "-- used to enforce data integrity and specific",
        "-- semantics on edge tables in SQL Server ",
        "-- graph database. ",
        "-- ===========================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO ",
        "",
        "ALTER TABLE ${2:dbo}.${3:sample_edgetable}",
        "   ADD CONSTRAINT ${4:}",
        "   CONNECTION (${5:}, ${6:} TO ${6:})",
        "   ON DELETE { NO ACTION | CASCADE }",
        "GO"
    ],
    "description": "Create Graph Edge Constraint"
},"Create Graph Edge Table":{
    "scope": "sql",
    "prefix": "ssmsCreateGraphEdgeTable",
    "body": [
        "-- =========================================",
        "-- Create Graph Edge Table Template",
        "-- =========================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "DROP TABLE IF EXISTS ${2:dbo}.${3:sample_edgetable}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_edgetable}",
        "(",
        "    -- Columns are optional for Graph Edge Tables.",
        "    --",
        "    ${4:c1} ${5:int} ${6:NOT NULL},",
        "    ${7:c2} ${8:char(10)} ${9:NULL},",
        "    ${10:c3} ${11:datetime} ${12:NULL},",
        "",
        "    -- System generated edge constraint.",
        "    --",
        "    CONNECTION (${13:}),",
        "",
        "    CONSTRAINT EC_${14:} CONNECTION (${13:}, ${15:} TO ${15:}),",
        "    -- Unique index on $edge_id is required.",
        "    -- If no user-defined index is specified, a default index is created.",
        "    --",
        "    INDEX ix_graphid UNIQUE ($edge_id),",
        "",
        "    -- indexes on $from_id and $to_id are optional, but support faster lookups.",
        "    --",
        "    INDEX ix_fromid ($from_id, $to_id),",
        "    INDEX ix_toid ($to_id, $from_id)",
        ")",
        "AS EDGE",
        "GO",
        ""
    ],
    "description": "Create Graph Edge Table"
},"Create Graph Node Table":{
    "scope": "sql",
    "prefix": "ssmsCreateGraphNodeTable",
    "body": [
        "-- =========================================",
        "-- Create Graph Node Template",
        "-- =========================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_nodetable}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_nodetable}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_nodetable}",
        "(",
        "    ${4:c1} ${5:int} ${6:NOT NULL},",
        "    ${7:c2} ${8:char(10)} ${9:NULL},",
        "    ${10:c3} ${11:datetime} ${12:NULL},",
        "",
        "    -- Unique index on $node_id is required.",
        "    -- If no user-defined index is specified, a default index is created.",
        "    INDEX ix_graphid UNIQUE ($node_id)",
        ")",
        "AS NODE",
        "GO",
        ""
    ],
    "description": "Create Graph Node Table"
},"Create Memory Optimized System-Versioned Table":{
    "scope": "sql",
    "prefix": "ssmsCreateMemoryOptimizedSystem-VersionedTable",
    "body": [
        "-- ======================================================",
        "-- Create Memory Optimized System-Versioned Temporal Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- ",
        "-- This template creates a memory optimized system-versioned temporal table and indexes on the memory optimized table.",
        "-- ",
        "-- The database must have a MEMORY_OPTIMIZED_DATA filegroup before the memory optimized table can be created.",
        "-- To learn about prerequistes for creating memory-optimized tables, take a look at \"Creating a Memory-Optimized Table and a Natively Compiled Stored Procedure\":",
        "-- https://msdn.microsoft.com/en-us/library/dn133079.aspx",
        "-- ",
        "-- For more details on system-versioned temporal tables please refer to MSDN documentation:",
        "-- https://msdn.microsoft.com/en-IN/library/dn935015.aspx#Anchor_0",
        "-- ",
        "-- To learn more how to use system-versioned tables in your applications, take a look at \"Getting Started with System-Versioned Temporal Tables\":",
        "-- https://msdn.microsoft.com/en-US/library/mt604462.aspx",
        "-- =========================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "BEGIN",
        "       IF ((SELECT temporal_type FROM sys.tables WHERE object_id = OBJECT_ID('${2:dbo}.${3:sample_memoryoptimizedtable}', 'U')) = 2)",
        "       BEGIN",
        "            ALTER TABLE [${2:dbo}].[${3:sample_memoryoptimizedtable}] SET (SYSTEM_VERSIONING = OFF)",
        "       END",
        "       DROP TABLE IF EXISTS [${2:dbo}].[${3:sample_memoryoptimizedtable}]",
        "END",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${4:sample_memoryoptimizedtable}",
        "(",
        "    ${5:c1} ${6:int} ${7:NOT NULL},",
        "    ${8:c2} ${9:float} ${10:NOT NULL},",
        "    ${11:c3} ${12:decimal(10,2)} ${13:NOT NULL} INDEX ${14:index_sample_memoryoptimizedtable_c3} NONCLUSTERED (${11:c3}),",
        "",
        "     --Period columns and PERIOD FOR SYSTEM_TIME definition",
        "    ${15:SysStartTime} datetime2(7) GENERATED ALWAYS AS ROW START NOT NULL,",
        "    ${16:SysEndTime} datetime2(7) GENERATED ALWAYS AS ROW END NOT NULL,",
        "    PERIOD FOR SYSTEM_TIME(${15:SysStartTime},${16:SysEndTime}),",
        "",
        "    --Primary key definition",
        "    CONSTRAINT ${17:PK_sample_memoryoptimizedtable} PRIMARY KEY NONCLUSTERED (${5:c1}),",
        "",
        "    -- See SQL Server Books Online for guidelines on determining appropriate bucket count for the index",
        "    INDEX ${18:hash_index_sample_memoryoptimizedtable_c2} HASH (${8:c2}) WITH (BUCKET_COUNT = ${19:131072})",
        ")",
        "WITH ",
        "(",
        "    MEMORY_OPTIMIZED = ON,",
        "    DURABILITY = ${20:SCHEMA_AND_DATA},",
        "    --Set SYSTEM_VERSIONING to ON and provide reference to HISTORY_TABLE. ",
        "    SYSTEM_VERSIONING = ON",
        "    (",
        "        --If HISTORY_TABLE does not exists, default table will be created.",
        "        HISTORY_TABLE = [${21:dbo}].[${22:sample_memoryoptimizedtable_history}],",
        "        --Specifies whether data consistency check will be performed across current and history tables (default is ON)",
        "        DATA_CONSISTENCY_CHECK = ${23:ON}",
        "    )",
        ")",
        "GO"
    ],
    "description": "Create Memory Optimized System-Versioned Table"
},"Create Memory Optimized Table":{
    "scope": "sql",
    "prefix": "ssmsCreateMemoryOptimizedTable",
    "body": [
        "--======================================================",
        "-- Create Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template creates a memory optimized table and indexes on the memory optimized table.",
        "-- The database must have a MEMORY_OPTIMIZED_DATA filegroup before the memory optimized table can be created.",
        "--======================================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "--Drop table if it already exists.",
        "IF OBJECT_ID('${2:dbo}.${3:sample_memoryoptimizedtable}','U') IS NOT NULL",
        "    DROP TABLE ${2:dbo}.${3:sample_memoryoptimizedtable}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_memoryoptimizedtable}",
        "(",
        "\t${4:c1} ${5:int} ${6:NOT NULL}, ",
        "\t${7:c2} ${8:float} ${9:NOT NULL},",
        "\t${10:c3} ${11:decimal(10,2)} ${12:NOT NULL} INDEX ${13:index_sample_memoryoptimizedtable_c3} NONCLUSTERED (${10:c3}), ",
        "",
        "   CONSTRAINT ${14:PK_sample_memoryoptimizedtable} PRIMARY KEY NONCLUSTERED (${15:c1}),",
        "   -- See SQL Server Books Online for guidelines on determining appropriate bucket count for the index",
        "   INDEX ${16:hash_index_sample_memoryoptimizedtable_c2} HASH (${7:c2}) WITH (BUCKET_COUNT = ${17:131072})",
        ") WITH (MEMORY_OPTIMIZED = ON, DURABILITY = ${18:SCHEMA_AND_DATA})",
        "GO"
    ],
    "description": "Create Memory Optimized Table"
},"Create System-Versioned Table":{
    "scope": "sql",
    "prefix": "ssmsCreateSystem-VersionedTable",
    "body": [
        "-- =========================================",
        "-- Create system-versioned temporal table template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- ",
        "-- This template creates a system-versioned temporal table.",
        "-- ",
        "-- For more details on system-versioned temporal tables please refer to MSDN documentation:",
        "-- https://msdn.microsoft.com/en-IN/library/dn935015.aspx#Anchor_0",
        "-- ",
        "-- To learn more how to use system-versioned tables in your applications, take a look at \"Getting Started with System-Versioned Temporal Tables\":",
        "-- https://msdn.microsoft.com/en-US/library/mt604462.aspx",
        "-- =========================================",
        "",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "BEGIN",
        "    --If table is system-versioned, SYSTEM_VERSIONING must be set to OFF first ",
        "    IF ((SELECT temporal_type FROM sys.tables WHERE object_id = OBJECT_ID('${2:dbo}.${3:sample_table}', 'U')) = 2)",
        "    BEGIN",
        "        ALTER TABLE [${2:dbo}].[${3:sample_table}] SET (SYSTEM_VERSIONING = OFF)",
        "    END",
        "    DROP TABLE IF EXISTS [${2:dbo}].[${3:sample_table}]",
        "END",
        "GO",
        "",
        "--Create system-versioned temporal table. It must have primary key and two datetime2 columns that are part of SYSTEM_TIME period definition",
        "CREATE TABLE [${2:dbo}].[${3:sample_table}]",
        "(",
        "    ${4:c1} ${5:int} ${6:NOT NULL},",
        "    ${7:c2} ${8:char(10)} ${9:NULL},",
        "    ${10:c3} ${11:datetime} ${12:NULL},",
        "",
        "    --Period columns and PERIOD FOR SYSTEM_TIME definition",
        "    ${13:SysStartTime} datetime2(7) GENERATED ALWAYS AS ROW START ${14:} NOT NULL ,",
        "    ${15:SysEndTime} datetime2(7) GENERATED ALWAYS AS ROW END ${16:} NOT NULL ,",
        "    PERIOD FOR SYSTEM_TIME(${13:SysStartTime},${15:SysEndTime}),",
        "",
        "    --Primary key definition",
        "    CONSTRAINT ${17:PK_sampletable} PRIMARY KEY (${4:c1})",
        ")",
        "WITH",
        "(",
        "    --Set SYSTEM_VERSIONING to ON and provide reference to HISTORY_TABLE. ",
        "    SYSTEM_VERSIONING = ON ",
        "    (",
        "        --If HISTORY_TABLE does not exists, default table will be created.",
        "        HISTORY_TABLE = [${18:dbo}].[${19:sample_table_history}],",
        "        --Specifies whether data consistency check will be performed across current and history tables (default is ON)",
        "        DATA_CONSISTENCY_CHECK = ${20:ON}",
        "    )",
        ")",
        "GO",
        ""
    ],
    "description": "Create System-Versioned Table"
},"Create Table with Filestream Column":{
    "scope": "sql",
    "prefix": "ssmsCreateTablewithFilestreamColumn",
    "body": [
        "-- =========================================",
        "-- Create table with filestream column",
        "-- =========================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_table}",
        "(",
        "\t${4:c1} ${5:int} ${6:NOT NULL}, ",
        "\t${7:c2} ${8:char(10)} ${9:NULL}, ",
        "\t${10:c3} ${11:datetime} ${12:NULL}, ",
        "\t${13:c4} varbinary(max) filestream ${14:NULL}, ",
        "\t${15:c5} uniqueidentifier NOT NULL rowguidcol unique, ",
        "    CONSTRAINT ${16:PK_sample_table} PRIMARY KEY (${4:c1})",
        ")",
        "GO"
    ],
    "description": "Create Table with Filestream Column"
},"Create Table":{
    "scope": "sql",
    "prefix": "ssmsCreateTable",
    "body": [
        "-- =========================================",
        "-- Create table template",
        "-- =========================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_table}",
        "(",
        "\t${4:c1} ${5:int} ${6:NOT NULL}, ",
        "\t${7:c2} ${8:char(10)} ${9:NULL}, ",
        "\t${10:c3} ${11:datetime} ${12:NULL}, ",
        "    CONSTRAINT ${13:PK_sample_table} PRIMARY KEY (${4:c1})",
        ")",
        "GO",
        ""
    ],
    "description": "Create Table"
},"Drop Column":{
    "scope": "sql",
    "prefix": "ssmsDropColumn",
    "body": [
        "--============================================",
        "-- Drop column template",
        "--",
        "-- This template creates a table, then it  ",
        "-- drops one of the columns of the table.",
        "--============================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_table}",
        "(",
        "\tcolumn1 int      NOT NULL, ",
        "\tcolumn2 char(10) NULL,",
        "\t${4:column3} datetime NULL",
        ")",
        "GO",
        "",
        "-- Drop a column from the table",
        "ALTER TABLE ${2:dbo}.${3:sample_table}",
        "\tDROP COLUMN ${4:column3} ",
        "GO",
        ""
    ],
    "description": "Drop Column"
},"Drop Constraint":{
    "scope": "sql",
    "prefix": "ssmsDropConstraint",
    "body": [
        "-- ========================================================",
        "-- Drop constraint template",
        "--",
        "-- This template creates a table with a CHECK CONSTRAINT,  ",
        "-- then it removes the CHECK CONSTRAINT from the table",
        "",
        "-- Note: The DROP syntax can also be used to drop",
        "-- Edge Constraint object types. To achieve this replace",
        "-- the constraint_name attribute with the name of the",
        "-- respective Edge Constraint object",
        "-- ========================================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID('${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_table}",
        "(",
        "\tcolumn1      int      NOT NULL, ",
        "\tsalary       money    NOT NULL CONSTRAINT ${4:salary_cap} CHECK (salary < 500000)",
        ")",
        "GO",
        "",
        "-- Drop CHECK CONSTRAINT from the table",
        "ALTER TABLE ${2:dbo}.${3:sample_table}",
        "\tDROP CONSTRAINT ${4:salary_cap}",
        "GO",
        "",
        ""
    ],
    "description": "Drop Constraint"
},"Drop External Table":{
    "scope": "sql",
    "prefix": "ssmsDropExternalTable",
    "body": [
        "--===================================",
        "-- Drop external table template",
        "--===================================",
        "IF EXISTS (",
        "  SELECT *",
        "    FROM sys.tables",
        "    JOIN sys.schemas",
        "      ON sys.tables.schema_id = sys.schemas.schema_id",
        "   WHERE sys.schemas.name = N'${1:your_schema_name}'",
        "     AND sys.tables.name = N'${2:your_externaltable_name}'",
        ")",
        "DROP EXTERNAL TABLE ${1:your_schema_name}.${2:your_externaltable_name}",
        "GO"
    ],
    "description": "Drop External Table"
},"Drop Key":{
    "scope": "sql",
    "prefix": "ssmsDropKey",
    "body": [
        "-- ===================================================",
        "-- Drop Key template",
        "--",
        "-- This template creates a table with a primary key,  ",
        "-- then it drops the primary key of the table.",
        "-- ===================================================",
        "USE ${1:AdventureWorks}",
        "GO",
        "",
        "IF OBJECT_ID(N'${2:dbo}.${3:sample_table}', 'U') IS NOT NULL",
        "  DROP TABLE ${2:dbo}.${3:sample_table}",
        "GO",
        "",
        "CREATE TABLE ${2:dbo}.${3:sample_table}",
        "(",
        "\tc1 int      NOT NULL, ",
        "\tc2 char(10) NULL, ",
        "\tc3 datetime NULL, ",
        "    CONSTRAINT ${4:primary_key_name} PRIMARY KEY(c1)",
        ")",
        "GO",
        "",
        "ALTER TABLE ${2:dbo}.${3:sample_table}",
        "  DROP CONSTRAINT ${4:primary_key_name}",
        "GO",
        "",
        ""
    ],
    "description": "Drop Key"
},"Drop Table":{
    "scope": "sql",
    "prefix": "ssmsDropTable",
    "body": [
        "--======================",
        "-- Drop Table template",
        "--======================",
        "IF EXISTS (",
        "  SELECT *",
        "\tFROM sys.tables",
        "\tJOIN sys.schemas",
        "\t  ON sys.tables.schema_id = sys.schemas.schema_id",
        "   WHERE sys.schemas.name = N'${1:your_schema_name}'",
        "\t AND sys.tables.name = N'${2:your_table_name}'",
        ")",
        "  DROP TABLE ${1:your_schema_name}.${2:your_table_name}",
        "GO",
        ""
    ],
    "description": "Drop Table"
},"Modify Memory Optimized Column":{
    "scope": "sql",
    "prefix": "ssmsModifyMemoryOptimizedColumn",
    "body": [
        "--======================================================",
        "-- Modify Column on a Memory Optimized Table Template",
        "-- Use the Specify Values for Template Parameters command (Ctrl-Shift-M) to fill in the parameter values below.",
        "-- This template modifies a column on a memory optimized table.",
        "--======================================================",
        "USE [${1:memory_optimized_database}]",
        "GO",
        "",
        "ALTER TABLE [${2:dbo}].[${3:memory_optimized_table}]",
        "\tALTER COLUMN ${4:column_to_modify} ${5:int} ${6:NULL}",
        "GO"
    ],
    "description": "Modify Memory Optimized Column"
}}