{"Create INSTEAD OF Trigger Basic Template":{
    "scope": "sql",
    "prefix": "ssmsCreateINSTEADOFTriggerBasicTemplate",
    "body": [
        "-- =============================================",
        "-- Create basic Instead Of Trigger",
        "-- =============================================",
        "IF EXISTS (SELECT name ",
        "\t   FROM   sysobjects ",
        "\t   WHERE  name = N'${1:trig_test}' ",
        "\t   AND \t  type = 'TR')",
        "    DROP TRIGGER ${1:trig_test}",
        "GO",
        "",
        "CREATE TRIGGER ${1:trig_test}",
        "ON ${2:pubs.dbo.sales}",
        "INSTEAD OF INSERT",
        "AS",
        "BEGIN",
        "\tRAISERROR (50009, 16, 10)",
        "\tEXEC sp_who",
        "END",
        "GO",
        "",
        ""
    ],
    "description": "Create INSTEAD OF Trigger Basic Template"
},"Create Trigger Basic Template":{
    "scope": "sql",
    "prefix": "ssmsCreateTriggerBasicTemplate",
    "body": [
        "-- =============================================",
        "-- Create trigger basic template(After trigger)",
        "-- =============================================",
        "IF EXISTS (SELECT name ",
        "\t   FROM   sysobjects ",
        "\t   WHERE  name = N'${1:trig_test}' ",
        "\t   AND \t  type = 'TR')",
        "    DROP TRIGGER ${1:trig_test}",
        "GO",
        "",
        "CREATE TRIGGER ${1:trig_test}",
        "ON ${2:pubs.dbo.sales}",
        "FOR DELETE, INSERT, UPDATE ",
        "AS ",
        "BEGIN",
        "\tRAISERROR (50009, 16, 10)",
        "END",
        "GO",
        "",
        ""
    ],
    "description": "Create Trigger Basic Template"
},"Create Trigger Contained IF COLUMNS_UPDATED":{
    "scope": "sql",
    "prefix": "ssmsCreateTriggerContainedIFCOLUMNS_UPDATED",
    "body": [
        "-- =============================================",
        "-- Create trigger contained If (COLUMNS_UPDATED()) ",
        "-- =============================================",
        "IF EXISTS (SELECT name ",
        "\t   FROM   sysobjects ",
        "\t   WHERE  name = N'${1:trig_test}' ",
        "\t   AND \t  type = 'TR')",
        "    DROP TRIGGER ${1:trig_test}",
        "GO",
        "",
        "CREATE TRIGGER ${1:trig_test}",
        "ON ${2:pubs.dbo.sales}",
        "FOR INSERT, UPDATE ",
        "AS",
        "--eg. check if all of column 2, 3, 4 are updated",
        "IF (COLUMNS_UPDATED() & 14) = 14",
        "BEGIN",
        "\tRAISERROR ('These columns can not be updated at the same time', 16, 1)",
        "\tROLLBACK TRANSACTION",
        "END",
        "GO",
        "",
        ""
    ],
    "description": "Create Trigger Contained IF COLUMNS_UPDATED"
},"Create Trigger Contained IF UPDATE":{
    "scope": "sql",
    "prefix": "ssmsCreateTriggerContainedIFUPDATE",
    "body": [
        "-- =============================================",
        "-- Create trigger contained If UPDATE(column)",
        "-- =============================================",
        "IF EXISTS (SELECT name ",
        "\t   FROM   sysobjects ",
        "\t   WHERE  name = N'${1:trig_test}' ",
        "\t   AND \t  type = 'TR')",
        "    DROP TRIGGER ${1:trig_test}",
        "GO",
        "",
        "CREATE TRIGGER ${1:trig_test}",
        "ON ${2:pubs.dbo.sales}",
        "FOR INSERT, UPDATE ",
        "AS ",
        "If UPDATE(${3:stor_id}) OR UPDATE(${4:ord_num})",
        "BEGIN",
        "\tRAISERROR ('These columns should never be updated', 16, 1)",
        "\tROLLBACK TRANSACTION",
        "END",
        "GO",
        "",
        ""
    ],
    "description": "Create Trigger Contained IF UPDATE"
}}